(function () {
    'use strict';

    angular.module('gen', [
        // Angular modules 

        // Custom modules 

        // 3rd Party Modules
        
    ]);

    
}());

(function(){
	'use strict'

	angular
		.module('gen')
		.factory('lodash', factory);

	factory.$inject = ['$window']

	function factory($window){
		var _ = $window._;
		if(!_){ throw "lodash library not found in global scope, please include the lodash library" }
	 	delete( $window._ ); //delete the global lodash instance to prevent intersections

		return _;
	}

}());

(function(){
	'use strict'

	angular
		.module('gen')
		.directive('dropList', dropList);

	//dropList.$inject = [];

	function dropList(){
		var directive = {
	        restrict: 'EA',
	        templateUrl: '/app/gen/components/dropList/dropList.html',
	        transclude: true,
	        scope: true,
	        link: link,
	        controller: DropListController,
	        controllerAs: 'vm',
	        bindToController: true // because the scope is isolated
	    };

	    return directive;

	    function link(scope, el, attr) {
	    	if(attr.hasOwnProperty("header")){
	    		scope.vm.setTitle(attr.header);
	    	}
	    }

	}

	function DropListController() {
	    var vm = this;
	    vm.show = false;
	    vm.title = "";
	    vm.buttonText = "+";

	    vm.toggleShow = function(){
	    	vm.show = !vm.show;
	    	vm.buttonText = (vm.show) ? "-" : "+";
	    }
	    vm.setTitle = function(value){
	    	vm.title = value;
	    }
	}

}());





(function(){
	'use strict'

	angular
		.module('gen')
		.directive('tabItem', tabItem);

	//tabItem.$inject = [];

	function tabItem(){
		var directive = {
	        restrict: 'EA',
	        transclude: true,
	        templateUrl: '/app/gen/components/tabs/tabItem.html',
	        require: "^tabSet",
	        link: link,
	       	scope: {
	       		tabtitle: "@"
	        },
	    };

	    return directive;

	    function link(scope, el, attr, tabctrl) {
	    	scope.active = false;
	    	
	    	tabctrl.addTab(scope);
	    }

	}

}());


(function(){
	'use strict'

	angular
		.module('gen')
		.directive('tabSet', tabSet);

	//tabSet.$inject = [];

	function tabSet(){
		var directive = {
	        restrict: 'EA',
	        transclude: true,
	        templateUrl: '/app/gen/components/tabs/tabSet.html',
	        link: link,
	        controller: TabSetController,
	        controllerAs: 'tabset',
	        bindToController: true, // because the scope is isolated
	       	scope: {
	       		
	        },
	    };

	    return directive;

	    function link(scope, el, attr, ctrl) {

	    }

	}

	function TabSetController() {
	    var vm = this;
	    vm.tabs = [];
	    vm.addTab = function(tab){
	    	vm.tabs.push(tab);

	    	//set the first tab to active
	    	if(vm.tabs.length === 1){
	    		tab.active = true;
	    	}
	    }
	    vm.select = function(selected){
	    	angular.forEach(vm.tabs, function(tab){
	    		if(tab.active && tab !== selected){
	    			tab.active = false;
	    		}
	    	});

	    	selected.active = true;
	    }
	}

}());



//# sourceMappingURL=gen.min.js.map